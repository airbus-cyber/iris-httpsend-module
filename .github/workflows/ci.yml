name: Continuous Integration
on: push

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      IRIS_VERSION: v2.0.0-beta-1
    steps:
      - name: Check out iris-httpsend-module
        uses: actions/checkout@v3
        with:
          path: iris-httpsend-module
      - name: Set iris-httpsend-module version in HTTPSEND_VERSION
        working-directory: iris-httpsend-module
        run: |
          echo "HTTPSEND_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
      - name: Check out Iris ${{ env.IRIS_VERSION }}
        uses: actions/checkout@v3
        with:
          repository: dfir-iris/iris-web
          ref: ${{ env.IRIS_VERSION }}
          path: iris-web
      - name: Build dockers
        working-directory: iris-web
        run: |
          docker build --tag iris-web_db docker/db
          docker build --build-arg NGINX_CONF_GID=1234 --build-arg NGINX_CONF_FILE=nginx.conf --tag iriswebapp_nginx docker/nginx
          docker build --file docker/webApp/Dockerfile --tag iriswebapp_app .
      - name: Archive dockers
        run: |
          mkdir artifacts
          docker save iris-web_db iriswebapp_nginx iriswebapp_app | gzip > artifacts/iris-httpsend-${{ env.HTTPSEND_VERSION }}.dockers.tar.gz
      - name: Save dockers as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dockers
          path: artifacts/iris-httpsend-${{ env.HTTPSEND_VERSION }}.dockers.tar.gz
          if-no-files-found: error
          retention-days: 2
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/iris-httpsend-${{ env.HTTPSEND_VERSION }}.dockers.tar.gz
          fail_on_unmatched_files: true