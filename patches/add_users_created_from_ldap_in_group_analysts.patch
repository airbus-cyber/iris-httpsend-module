diff --git a/source/app/iris_engine/access_control/ldap_handler.py b/source/app/iris_engine/access_control/ldap_handler.py
index 740af85f..1433b7fa 100644
--- a/source/app/iris_engine/access_control/ldap_handler.py
+++ b/source/app/iris_engine/access_control/ldap_handler.py
@@ -27,7 +27,10 @@ from ldap3 import Tls
 from ldap3.utils import conv
 
 from app import app
-from app.datamgmt.manage.manage_users_db import create_user, get_active_user_by_login
+from app.datamgmt.manage.manage_users_db import get_active_user_by_login
+from app.datamgmt.manage.manage_users_db import create_user
+from app.datamgmt.manage.manage_users_db import add_user_to_group
+from app.iris_engine.access_control.utils import ac_get_group_analysts
 
 log = app.logger
 
@@ -71,7 +74,9 @@ def _provision_user(connection, user_login):
     password = ''.join(random.choices(string.printable[:-6], k=16))
     # TODO It seems email unicity is required (a fixed email causes a problem at the second account creation)
     #      The email either comes from the ldap or is forged from the login to ensure unicity
-    create_user(user_name, user_login, password, user_email, True)
+    user = create_user(user_name, user_login, password, user_email, True)
+    ganalysts = ac_get_group_analysts()
+    add_user_to_group(user.id, ganalysts.group_id)
 
 
 def ldap_authenticate(ldap_user_name, ldap_user_pwd):
diff --git a/source/app/iris_engine/access_control/utils.py b/source/app/iris_engine/access_control/utils.py
index d1d56121..af74ec2e 100644
--- a/source/app/iris_engine/access_control/utils.py
+++ b/source/app/iris_engine/access_control/utils.py
@@ -63,6 +63,12 @@ def ac_combine_groups_access(groups_list):
     return users
 
 
+def ac_get_group_analysts():
+    return Group.query.filter(
+        Group.group_name == "Analysts"
+    ).first()
+
+
 def ac_get_mask_analyst():
     """
     Return a standard access mask for analysts
diff --git a/source/app/post_init.py b/source/app/post_init.py
index 20129d08..e1b9ec5c 100644
--- a/source/app/post_init.py
+++ b/source/app/post_init.py
@@ -43,6 +43,7 @@ from app.datamgmt.manage.manage_users_db import add_user_to_organisation
 from app.iris_engine.access_control.utils import ac_add_user_effective_access
 from app.iris_engine.demo_builder import create_demo_cases
 from app.iris_engine.access_control.utils import ac_get_mask_analyst
+from app.iris_engine.access_control.utils import ac_get_group_analysts
 from app.iris_engine.access_control.utils import ac_get_mask_full_permissions
 from app.iris_engine.module_handler.module_handler import check_module_health
 from app.iris_engine.module_handler.module_handler import instantiate_module_from_name
@@ -690,9 +691,7 @@ def create_safe_auth_model():
     except exc.IntegrityError:
         db.session.rollback()
         log.warning('Analysts group integrity error. Group permissions were probably changed. Updating.')
-        ganalysts = Group.query.filter(
-            Group.group_name == "Analysts"
-        ).first()
+        ganalysts = ac_get_group_analysts()
 
     if ganalysts.group_permissions != ac_get_mask_analyst():
         ganalysts.group_permissions = ac_get_mask_analyst()
