name: Continuous Integration
on: push

jobs:
  iris-httpsend-module:
    name: Build iris-httpsend-module
    runs-on: ubuntu-20.04
    steps:
      - name: Check out iris-httpsend-module
        uses: actions/checkout@v3
      - name: Get iris-httpsend-module version
        id: get-version
        run: |
          echo "version=$(python setup.py --version)" >> $GITHUB_OUTPUT
      - name: Build wheel for iris-httpsend-module ${{ steps.get-version.outputs.version }}
        run: |
          python setup.py bdist_wheel
      - name: Archive iris-httpsend-module wheel
        uses: actions/upload-artifact@v3
        with:
          name: iris-httpsend-module-wheel
          path: dist/iris_httpsend_module-${{ steps.get-version.outputs.version }}-py3-none-any.whl
          if-no-files-found: error
          retention-days: 1
    outputs:
      version: ${{ steps.get-version.outputs.version }}

  dockers:
    name: Build iris dockers with iris-httpsend-module and run end-to-end tests
    runs-on: ubuntu-20.04
    needs: iris-httpsend-module
    env:
      IRIS_VERSION: v2.0.0-beta-1
      HTTPSEND_VERSION: ${{ needs.iris-httpsend-module.outputs.version }}
    steps:
      - name: Check out Iris ${{ env.IRIS_VERSION }}
        uses: actions/checkout@v3
        with:
          repository: dfir-iris/iris-web
          ref: ${{ env.IRIS_VERSION }}
          path: iris-web
      - name: Download iris-httpsend-module wheel
        uses: actions/download-artifact@v3
        with:
          name: iris-httpsend-module-wheel
          path: iris-web/source/dependencies
      - name: Build dockers
        working-directory: iris-web
        run: |
          printf "\ndependencies/iris_httpsend_module-${{ env.HTTPSEND_VERSION }}-py3-none-any.whl" >> source/requirements.txt
          docker build --tag iris-web_db docker/db
          docker build --build-arg NGINX_CONF_GID=1234 --build-arg NGINX_CONF_FILE=nginx.conf --tag iriswebapp_nginx docker/nginx
          docker build --file docker/webApp/Dockerfile --tag iriswebapp_app .
      - name: Check out iris-httpsend-module
        uses: actions/checkout@v3
        with:
          path: iris-httpsend-module
      - name: Run end-to-end tests
        working-directory: iris-httpsend-module/tests
        run: |
          cp data/tests.env ../../iris-web/.env
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python -m unittest --verbose
      - name: Produce tar archive with dockers
        run: |
          docker save iris-web_db iriswebapp_nginx iriswebapp_app | gzip > iris-httpsend-${{ env.HTTPSEND_VERSION }}.dockers.tar.gz
      - name: Archive dockers tar as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dockers
          path: iris-httpsend-${{ env.HTTPSEND_VERSION }}.dockers.tar.gz
          if-no-files-found: error
          retention-days: 1
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            iris-httpsend-${{ env.HTTPSEND_VERSION }}.dockers.tar.gz
          fail_on_unmatched_files: true
